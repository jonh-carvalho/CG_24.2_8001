{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Computa\u00e7\u00e3o Gr\u00e1fica C\u00f3digo da Disciplina : IBM0168/13186245-8001 Sobre Disciplina que apresenta os Conceitos da Computa\u00e7\u00e3o Gr\u00e1fica. Ferramentas Linguagens : Python, OpenGL, Blender e Javascript Tecnologias : Visual Studio Code e Github As APs e ACs dever\u00e3o ser enviadas no github.","title":"Computa\u00e7\u00e3o Gr\u00e1fica"},{"location":"#computacao-grafica","text":"C\u00f3digo da Disciplina : IBM0168/13186245-8001","title":"Computa\u00e7\u00e3o Gr\u00e1fica"},{"location":"#sobre","text":"Disciplina que apresenta os Conceitos da Computa\u00e7\u00e3o Gr\u00e1fica.","title":"Sobre"},{"location":"#ferramentas","text":"Linguagens : Python, OpenGL, Blender e Javascript Tecnologias : Visual Studio Code e Github As APs e ACs dever\u00e3o ser enviadas no github.","title":"Ferramentas"},{"location":"_Disciplina/ambiente/","text":"Ambiente de Desenvolvimento Visual Studio Code Solu\u00e7\u00e3o mais simples de instalar, usar o VSCode do Ms Store Instalar a extens\u00e3o Python Python - Linux e Windows [Mais f\u00e1cil de instalar e usar] Instalar Python3 (tamb\u00e9m dispon\u00edvel no Ms Store) Ambiente Virtual - com o ctrl + shift + p - clicar em Python Create Enviroment para criar uma pasta \"isolada\" com as bibliotecas usadas na disciplina Instalar depend\u00eancias: OPENGL: !pip install pyopengl GLFW: !pip install glfw Testar com os c\u00f3digos-base da Aula 3. C - Windows Instalar o ambiente Mingw [ http://mingw-w64.org/ ]. Fazer download do GLFW e copiar os arquivos nos diret\u00f3rios (bin, include, lib, etc) nos respectivos diret\u00f3rios do Mingw [ https://www.glfw.org/download.html ]. Fazer download do GLEW e copiar os arquivos nos diret\u00f3rios (bin, include, lib, etc) nos respectivos diret\u00f3rios do Mingw [ http://glew.sourceforge.net/ ]. Adicionar o diret\u00f3rio bin do Mingw no PATH do seu sistema operacional. Desta forma, o comando \"gcc\" estar\u00e1 dispon\u00edvel a partir de um prompt de comando. Para compilar: gcc main.c -lglfw3dll -lglew32 -lopengl32 Observa\u00e7\u00e3o 1: um ambiente pr\u00e9-peparado est\u00e1 dispon\u00edvel em http://websensors.net.br/projects/scc0250icmc/mingw64-opengl.zip Observa\u00e7\u00e3o 2: se no momento de execu\u00e7\u00e3o do programa for solicitado dll do GLFW e GLEW, copie eles do Mingw para o mesmo diret\u00f3rio do seu execut\u00e1vel. Testar com os c\u00f3digos-base da Aula 3. C - Linux (Debian e Ubuntu) Instalar os pacotes libglfw3-dev, mesa-common-dev, libglew-dev. Instalar o ambiente GCC (pacote build-essential). Para compilar: gcc main.c -lglfw -lGL -lGLEW -lm Testar com os c\u00f3digos-base da Aula 3. Java - Linux e Windows Instalar o Java JDK mais recente ( https://www.oracle.com/java/technologies/javase-downloads.html ). Utilizar o c\u00f3digo-base de exemplo disponibilizado na Aula 3 (possui as bibliotecas OpenGL e GLFW).","title":"Ambiente de Desenvolvimento"},{"location":"_Disciplina/ambiente/#ambiente-de-desenvolvimento","text":"","title":"Ambiente de Desenvolvimento"},{"location":"_Disciplina/ambiente/#visual-studio-code","text":"Solu\u00e7\u00e3o mais simples de instalar, usar o VSCode do Ms Store Instalar a extens\u00e3o Python","title":"Visual Studio Code"},{"location":"_Disciplina/ambiente/#python-linux-e-windows-mais-facil-de-instalar-e-usar","text":"Instalar Python3 (tamb\u00e9m dispon\u00edvel no Ms Store) Ambiente Virtual - com o ctrl + shift + p - clicar em Python Create Enviroment para criar uma pasta \"isolada\" com as bibliotecas usadas na disciplina Instalar depend\u00eancias: OPENGL: !pip install pyopengl GLFW: !pip install glfw Testar com os c\u00f3digos-base da Aula 3.","title":"Python - Linux e Windows [Mais f\u00e1cil de instalar e usar]"},{"location":"_Disciplina/ambiente/#c-windows","text":"Instalar o ambiente Mingw [ http://mingw-w64.org/ ]. Fazer download do GLFW e copiar os arquivos nos diret\u00f3rios (bin, include, lib, etc) nos respectivos diret\u00f3rios do Mingw [ https://www.glfw.org/download.html ]. Fazer download do GLEW e copiar os arquivos nos diret\u00f3rios (bin, include, lib, etc) nos respectivos diret\u00f3rios do Mingw [ http://glew.sourceforge.net/ ]. Adicionar o diret\u00f3rio bin do Mingw no PATH do seu sistema operacional. Desta forma, o comando \"gcc\" estar\u00e1 dispon\u00edvel a partir de um prompt de comando. Para compilar: gcc main.c -lglfw3dll -lglew32 -lopengl32 Observa\u00e7\u00e3o 1: um ambiente pr\u00e9-peparado est\u00e1 dispon\u00edvel em http://websensors.net.br/projects/scc0250icmc/mingw64-opengl.zip Observa\u00e7\u00e3o 2: se no momento de execu\u00e7\u00e3o do programa for solicitado dll do GLFW e GLEW, copie eles do Mingw para o mesmo diret\u00f3rio do seu execut\u00e1vel. Testar com os c\u00f3digos-base da Aula 3.","title":"C - Windows"},{"location":"_Disciplina/ambiente/#c-linux-debian-e-ubuntu","text":"Instalar os pacotes libglfw3-dev, mesa-common-dev, libglew-dev. Instalar o ambiente GCC (pacote build-essential). Para compilar: gcc main.c -lglfw -lGL -lGLEW -lm Testar com os c\u00f3digos-base da Aula 3.","title":"C - Linux (Debian e Ubuntu)"},{"location":"_Disciplina/ambiente/#java-linux-e-windows","text":"Instalar o Java JDK mais recente ( https://www.oracle.com/java/technologies/javase-downloads.html ). Utilizar o c\u00f3digo-base de exemplo disponibilizado na Aula 3 (possui as bibliotecas OpenGL e GLFW).","title":"Java - Linux e Windows"},{"location":"_Disciplina/aulas/","text":"Aulas Aula Conte\u00fado Aula 01 - 14/08/2024 | Introdu\u00e7\u00e3o a Computa\u00e7\u00e3o Gr\u00e1fica | Aula 02 - 28/08/2024 | Computa\u00e7\u00e3o Visual e Bibliotecas Gr\u00e1ficas | Aula 03 - 11/09/2024 | Aula interrompida por imprevisto na internet do professor | Aula 04 - 18/09/2024 | Aus\u00eancia dos alunos | Aula 05 - 25/09/2024 | Aula Alinhamento - Estudo Dirigido I| Aula 06 - 02/10/2024 | Imagens , Dispositivos e Espa\u00e7o de Cores e Vis\u00e3o Humana | Aula 07 - 16/10/2024 | Transforma\u00e7\u00f5es Geom\u00e9tricas | Aula 08 - 30/10/2024 | Modelos de Ilumina\u00e7\u00e3o - Arquivos Blender na pasta _Disciplina/docs| Aula 09 - 13/11/2024 | Anima\u00e7\u00e3o e Jogos e Texturas | Aula 10 - 27/11/2024 | AP2 |","title":"Aulas"},{"location":"_Disciplina/aulas/#aulas","text":"Aula Conte\u00fado Aula 01 - 14/08/2024 | Introdu\u00e7\u00e3o a Computa\u00e7\u00e3o Gr\u00e1fica | Aula 02 - 28/08/2024 | Computa\u00e7\u00e3o Visual e Bibliotecas Gr\u00e1ficas | Aula 03 - 11/09/2024 | Aula interrompida por imprevisto na internet do professor | Aula 04 - 18/09/2024 | Aus\u00eancia dos alunos | Aula 05 - 25/09/2024 | Aula Alinhamento - Estudo Dirigido I| Aula 06 - 02/10/2024 | Imagens , Dispositivos e Espa\u00e7o de Cores e Vis\u00e3o Humana | Aula 07 - 16/10/2024 | Transforma\u00e7\u00f5es Geom\u00e9tricas | Aula 08 - 30/10/2024 | Modelos de Ilumina\u00e7\u00e3o - Arquivos Blender na pasta _Disciplina/docs| Aula 09 - 13/11/2024 | Anima\u00e7\u00e3o e Jogos e Texturas | Aula 10 - 27/11/2024 | AP2 |","title":"Aulas"},{"location":"_Disciplina/github/","text":"Versionamento Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub . O que \u00e9 Git? O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil. Como instalar o Git Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral. Como configurar o Git Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais. Como criar e inicializar um projeto no Git Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git. Arquivos de projeto no Git Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github. O que \u00e9 o GitHub? O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem. Como enviar um reposit\u00f3rio para o Github ** Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica. Como adicionar arquivos ao Git Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** ** Como confirmar (commit) arquivos no Git O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles. **Como usar branches no Git ** Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test . **Como extrair um reposit\u00f3rio no Git ** Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone Conclus\u00e3o Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** ** Links git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Versionamento"},{"location":"_Disciplina/github/#versionamento","text":"Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub .","title":"Versionamento"},{"location":"_Disciplina/github/#o-que-e-git","text":"O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil.","title":"O que \u00e9 Git?"},{"location":"_Disciplina/github/#como-instalar-o-git","text":"Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral.","title":"Como instalar o Git"},{"location":"_Disciplina/github/#como-configurar-o-git","text":"Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais.","title":"Como configurar o Git"},{"location":"_Disciplina/github/#como-criar-e-inicializar-um-projeto-no-git","text":"Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git.","title":"Como criar e inicializar um projeto no Git"},{"location":"_Disciplina/github/#arquivos-de-projeto-no-git","text":"Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github.","title":"Arquivos de projeto no Git"},{"location":"_Disciplina/github/#o-que-e-o-github","text":"O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem.","title":"O que \u00e9 o GitHub?"},{"location":"_Disciplina/github/#como-enviar-um-repositorio-para-o-github","text":"Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica.","title":"Como enviar um reposit\u00f3rio para o Github**"},{"location":"_Disciplina/github/#como-adicionar-arquivos-ao-git","text":"Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** **","title":"Como adicionar arquivos ao Git"},{"location":"_Disciplina/github/#como-confirmar-commit-arquivos-no-git","text":"O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles.","title":"Como confirmar (commit) arquivos no Git"},{"location":"_Disciplina/github/#como-usar-branches-no-git","text":"Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test .","title":"**Como usar branches no Git **"},{"location":"_Disciplina/github/#como-extrair-um-repositorio-no-git","text":"Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone","title":"**Como extrair um reposit\u00f3rio no Git **"},{"location":"_Disciplina/github/#conclusao","text":"Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** **","title":"Conclus\u00e3o"},{"location":"_Disciplina/github/#links","text":"git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Links"},{"location":"_Disciplina/mkdocs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"_Disciplina/mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"_Disciplina/mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"_Disciplina/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"_Disciplina/Estudo%20Dirigido/","text":"Entregas de Estudos Dirigidos Estudo Dirigido 01 - 02/10/2024 Estudo Dirigido 02 - 16/10/2024 Estudo Dirigido 03 - 16/10/2024 Estudo Dirigido 04 - 30/10/2024 Estudo Dirigido 05 - 27/11/2024 - Ilumina\u00e7\u00e3o e Anima\u00e7\u00e3o.","title":"Entregas de Estudos Dirigidos"},{"location":"_Disciplina/Estudo%20Dirigido/#entregas-de-estudos-dirigidos","text":"Estudo Dirigido 01 - 02/10/2024 Estudo Dirigido 02 - 16/10/2024 Estudo Dirigido 03 - 16/10/2024 Estudo Dirigido 04 - 30/10/2024 Estudo Dirigido 05 - 27/11/2024 - Ilumina\u00e7\u00e3o e Anima\u00e7\u00e3o.","title":"Entregas de Estudos Dirigidos"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir01/","text":"Estudo Dirigido 01 Atividade: Objetivo : Demonstrar as diferen\u00e7as e principais caracter\u00edsticas das \u00e1reas relacionadas a Computa\u00e7\u00e3o Visual: S\u00edntese de Imagens(Computa\u00e7\u00e3o Gr\u00e1fica), Processamento de Imagens, Vis\u00e3o Computacional(Artificial) e Visualiza\u00e7\u00e3o Computacional. Considera\u00e7\u00f5es adicionais : Para cada uma das \u00e1reas deve-se selecionar uma aplica\u00e7\u00e3o, apresentar os principais aspectos e executar a aplica\u00e7\u00e3o ou c\u00f3digo dispon\u00edvel em reposit\u00f3rios p\u00fablicos com a devida explica\u00e7\u00e3o de aspectos espec\u00edficos de cada \u00e1rea.","title":"Estudo Dirigido 01"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir01/#estudo-dirigido-01","text":"","title":"Estudo Dirigido 01"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir01/#atividade","text":"","title":"Atividade:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir01/#objetivo","text":"Demonstrar as diferen\u00e7as e principais caracter\u00edsticas das \u00e1reas relacionadas a Computa\u00e7\u00e3o Visual: S\u00edntese de Imagens(Computa\u00e7\u00e3o Gr\u00e1fica), Processamento de Imagens, Vis\u00e3o Computacional(Artificial) e Visualiza\u00e7\u00e3o Computacional.","title":"Objetivo :"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir01/#consideracoes-adicionais","text":"Para cada uma das \u00e1reas deve-se selecionar uma aplica\u00e7\u00e3o, apresentar os principais aspectos e executar a aplica\u00e7\u00e3o ou c\u00f3digo dispon\u00edvel em reposit\u00f3rios p\u00fablicos com a devida explica\u00e7\u00e3o de aspectos espec\u00edficos de cada \u00e1rea.","title":"Considera\u00e7\u00f5es adicionais :"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir02/","text":"Estudo Dirigido 02 Atividade: Processamento de Imagens (Python e Notebook) Objetivo : Aplicar os conceitos de processamento de Imagens. 1. Redimensionamento e Cropping : Carregue uma imagem de sua escolha, redimensione para diferentes tamanhos e fa\u00e7a um recorte (cropping) na \u00e1rea central da imagem. Salve o resultado. Desafio : Redimensione mantendo a propor\u00e7\u00e3o original da imagem. 2. Conves\u00e3o de Cores Carregue uma imagem colorida e converta-a para escala de cinza, al\u00e9m de aplicar um filtro sepia. Dica: Sepia pode ser simulado ajustando os valores RGB. 3. Imagem Vetorial e Anima\u00e7\u00e3o Crie uma imagem vetorial com o formato SVG onde um c\u00edrculo animado se move horizontalmente de um lado ao outro da tela repetidamente. 4. Image Vetorial animada.","title":"Estudo Dirigido 02"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir02/#estudo-dirigido-02","text":"","title":"Estudo Dirigido 02"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir02/#atividade","text":"Processamento de Imagens (Python e Notebook)","title":"Atividade:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir02/#objetivo","text":"Aplicar os conceitos de processamento de Imagens. 1. Redimensionamento e Cropping : Carregue uma imagem de sua escolha, redimensione para diferentes tamanhos e fa\u00e7a um recorte (cropping) na \u00e1rea central da imagem. Salve o resultado. Desafio : Redimensione mantendo a propor\u00e7\u00e3o original da imagem. 2. Conves\u00e3o de Cores Carregue uma imagem colorida e converta-a para escala de cinza, al\u00e9m de aplicar um filtro sepia. Dica: Sepia pode ser simulado ajustando os valores RGB. 3. Imagem Vetorial e Anima\u00e7\u00e3o Crie uma imagem vetorial com o formato SVG onde um c\u00edrculo animado se move horizontalmente de um lado ao outro da tela repetidamente. 4. Image Vetorial animada.","title":"Objetivo :"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir03/","text":"Estudo Dirigido 03 Atividade: Quest\u00f5es Te\u00f3ricas Explique como o olho humano percebe as cores e descreva a fun\u00e7\u00e3o dos cones. Qual \u00e9 a diferen\u00e7a entre o modelo RGB e o CMYK? Cite um exemplo de aplica\u00e7\u00e3o para cada um. Explique o conceito de cor aditiva e subtrativa, fornecendo exemplos pr\u00e1ticos. 6.2. Aplica\u00e7\u00e3o Pr\u00e1tica (Python e Notebook) Pesquise sobre aplica\u00e7\u00f5es de sat\u00e9lite e sensoriamento remoto e apresente dois espa\u00e7os de cores comumente utilizados. Demonstre a utiliza\u00e7\u00e3o desses espa\u00e7os de cores com imagens geradas por sat\u00e9lite.","title":"Estudo Dirigido 03"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir03/#estudo-dirigido-03","text":"","title":"Estudo Dirigido 03"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir03/#atividade","text":"","title":"Atividade:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir03/#questoes-teoricas","text":"Explique como o olho humano percebe as cores e descreva a fun\u00e7\u00e3o dos cones. Qual \u00e9 a diferen\u00e7a entre o modelo RGB e o CMYK? Cite um exemplo de aplica\u00e7\u00e3o para cada um. Explique o conceito de cor aditiva e subtrativa, fornecendo exemplos pr\u00e1ticos.","title":"Quest\u00f5es Te\u00f3ricas"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir03/#62-aplicacao-pratica-python-e-notebook","text":"Pesquise sobre aplica\u00e7\u00f5es de sat\u00e9lite e sensoriamento remoto e apresente dois espa\u00e7os de cores comumente utilizados. Demonstre a utiliza\u00e7\u00e3o desses espa\u00e7os de cores com imagens geradas por sat\u00e9lite.","title":"6.2. Aplica\u00e7\u00e3o Pr\u00e1tica (Python e Notebook)"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/","text":"Estudo Dirigido 04 Atividade: Para plotar os exerc\u00edcios de transforma\u00e7\u00f5es geom\u00e9tricas, a biblioteca Matplotlib \u00e9 ideal, pois \u00e9 uma das mais populares para visualiza\u00e7\u00e3o de dados e gr\u00e1ficos em Python. A Matplotlib \u00e9 adequada para criar gr\u00e1ficos de 2D, como pontos, linhas e formas geom\u00e9tricas. Aqui est\u00e3o os passos gerais e uma explica\u00e7\u00e3o de como usar essa biblioteca para plotar as transforma\u00e7\u00f5es geom\u00e9tricas: Exerc\u00edcio 1: Transla\u00e7\u00e3o Simples Dado o ponto ( P(2, 3) ), aplique a transla\u00e7\u00e3o com vetor ( (4, -2) ). Perguntas : Qual \u00e9 o novo ponto ( P' )? Quais coordenadas foram alteradas? Exerc\u00edcio 2: Escala Uniforme Considere um tri\u00e2ngulo com v\u00e9rtices ( A(1, 1), B(3, 1) ) e ( C(2, 4) ). Aplique uma escala uniforme de fator 2. Perguntas : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s a transforma\u00e7\u00e3o? O que acontece com o tamanho do tri\u00e2ngulo? Exerc\u00edcio 3: Escala N\u00e3o Uniforme Aplique uma escala n\u00e3o uniforme no tri\u00e2ngulo do Exerc\u00edcio 2, com fator de 2 no eixo (x) e fator de 0,5 no eixo (y). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices? Exerc\u00edcio 4: Rota\u00e7\u00e3o em Torno da Origem Rotacione o ponto ( P(1, 0) ) em 90\u00b0 no sentido anti-hor\u00e1rio em torno da origem. Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' ) ap\u00f3s a rota\u00e7\u00e3o? Exerc\u00edcio 5: Rota\u00e7\u00e3o de um Pol\u00edgono Um quadrado tem v\u00e9rtices ( A(1, 1), B(1, 4), C(4, 4), D(4, 1) ). Aplique uma rota\u00e7\u00e3o de 45\u00b0 no sentido hor\u00e1rio. Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices? Exerc\u00edcio 6: Reflex\u00e3o Simples Dado o ponto ( P(2, 5) ), aplique uma reflex\u00e3o em rela\u00e7\u00e3o ao eixo (y). Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' )? Exerc\u00edcio 7: Reflex\u00e3o de um Tri\u00e2ngulo Considere um tri\u00e2ngulo com v\u00e9rtices ( A(2, 3), B(4, 3) ) e ( C(3, 5) ). Aplique uma reflex\u00e3o em rela\u00e7\u00e3o ao eixo (x). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s a transforma\u00e7\u00e3o? Exerc\u00edcio 8: Cisalhamento Horizontal Dado o ponto ( P(2, 3) ), aplique um cisalhamento horizontal com ( k = 2 ). Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' )? Exerc\u00edcio 9: Composi\u00e7\u00e3o de Transforma\u00e7\u00f5es Dado o ponto ( P(3, 2) ), aplique as seguintes transforma\u00e7\u00f5es consecutivas: 1. Uma transla\u00e7\u00e3o com vetor ( (1, -1) ). 2. Uma rota\u00e7\u00e3o de 90\u00b0 no sentido anti-hor\u00e1rio. 3. Uma escala uniforme com fator 2. Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' ) ap\u00f3s todas as transforma\u00e7\u00f5es? Exerc\u00edcio 10: Combina\u00e7\u00e3o de Transforma\u00e7\u00f5es em uma Figura Dado um ret\u00e2ngulo com v\u00e9rtices ( A(1, 1), B(5, 1), C(5, 3), D(1, 3) ), aplique as seguintes transforma\u00e7\u00f5es em sequ\u00eancia: 1. Transla\u00e7\u00e3o com vetor ( (-2, 3) ). 2. Escala n\u00e3o uniforme com fatores ( 1.5 ) no eixo (x) e (0.5) no eixo (y). 3. Reflex\u00e3o em rela\u00e7\u00e3o ao eixo (y). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s as tr\u00eas transforma\u00e7\u00f5es? Instala\u00e7\u00e3o e Instru\u00e7\u00f5es para o desenvolvimento Se voc\u00ea ainda n\u00e3o tiver o Matplotlib instalado, pode instalar com o seguinte comando: pip install matplotlib Estrutura Geral para Plotar Transforma\u00e7\u00f5es Para cada exerc\u00edcio, o processo de plotagem envolve: 1. Definir os pontos de uma forma geom\u00e9trica (tri\u00e2ngulo, quadrado, etc.). 2. Aplicar a transforma\u00e7\u00e3o (transla\u00e7\u00e3o, rota\u00e7\u00e3o, escala, etc.). 3. Plotar o objeto antes e depois da transforma\u00e7\u00e3o. Exemplo de C\u00f3digo Base com Matplotlib Aqui est\u00e1 uma estrutura de c\u00f3digo que pode ser adaptada para cada um dos exerc\u00edcios: import numpy as np import matplotlib.pyplot as plt def plot_shapes(original_shape, transformed_shape, title): plt.figure() plt.plot(*zip(*original_shape, original_shape[0]), label=\"Original\") plt.plot(*zip(*transformed_shape, transformed_shape[0]), label=\"Transformado\", linestyle=\"--\") plt.title(title) plt.legend() plt.grid(True) plt.show() # Exemplo de quadrado square = np.array([[1, 1], [1, 4], [4, 4], [4, 1]]) # Exemplo de transforma\u00e7\u00e3o: transla\u00e7\u00e3o transformed_square = square + [2, -1] # Plotar o quadrado original e transformado plot_shapes(square, transformed_square, \"Transla\u00e7\u00e3o de um Quadrado\") Aplica\u00e7\u00e3o para Cada Exerc\u00edcio: 1. Exerc\u00edcio de Transla\u00e7\u00e3o : - Use a fun\u00e7\u00e3o de transla\u00e7\u00e3o e aplique aos pontos do objeto. - Plotar o objeto original e o transformado. 2. Exerc\u00edcio de Escala (Uniforme e N\u00e3o Uniforme) : - Escale as coordenadas dos v\u00e9rtices de acordo com o fator de escala. - Plotar o objeto antes e depois da transforma\u00e7\u00e3o. 3. Exerc\u00edcio de Rota\u00e7\u00e3o : - Aplique uma rota\u00e7\u00e3o de acordo com a matriz de rota\u00e7\u00e3o. - Plotar a figura rotacionada em rela\u00e7\u00e3o \u00e0 original. 4. Exerc\u00edcio de Reflex\u00e3o : - Aplique a matriz de reflex\u00e3o em rela\u00e7\u00e3o ao eixo (x) ou (y). - Plotar o objeto antes e depois da reflex\u00e3o. 5. Exerc\u00edcio de Cisalhamento : - Aplique a matriz de cisalhamento aos v\u00e9rtices. - Plotar o objeto antes e depois da transforma\u00e7\u00e3o. 6. Composi\u00e7\u00e3o de Transforma\u00e7\u00f5es : - Aplique uma sequ\u00eancia de transforma\u00e7\u00f5es (transla\u00e7\u00e3o, rota\u00e7\u00e3o e escala) e observe como a figura muda. - Plotar cada passo da transforma\u00e7\u00e3o para visualizar cada altera\u00e7\u00e3o. Ajustes Espec\u00edficos para Cada Exerc\u00edcio: Exerc\u00edcios de Pol\u00edgonos (quadrado, tri\u00e2ngulo) : Definir as coordenadas iniciais dos v\u00e9rtices do pol\u00edgono. Exerc\u00edcios de Ponto Simples : Usar a fun\u00e7\u00e3o plt.scatter() para plotar um ponto antes e depois da transforma\u00e7\u00e3o. Exemplo Completo (Escala e Transla\u00e7\u00e3o): import numpy as np import matplotlib.pyplot as plt # Fun\u00e7\u00e3o para transla\u00e7\u00e3o def translate(points, translation): return points + translation # Fun\u00e7\u00e3o para escala def scale(points, factor): return points * factor # Exemplo: Tri\u00e2ngulo triangle = np.array([[1, 1], [3, 1], [2, 4]]) # Aplicar transla\u00e7\u00e3o e escala translated_triangle = translate(triangle, [2, 1]) scaled_triangle = scale(triangle, 1.5) # Plotar o tri\u00e2ngulo original, transladado e escalado plt.figure() plt.plot(*zip(*triangle, triangle[0]), label=\"Original\") plt.plot(*zip(*translated_triangle, translated_triangle[0]), label=\"Transladado\", linestyle=\"--\") plt.plot(*zip(*scaled_triangle, scaled_triangle[0]), label=\"Escalado\", linestyle=\"-.\") plt.title(\"Transforma\u00e7\u00f5es em um Tri\u00e2ngulo\") plt.legend() plt.grid(True) plt.show()","title":"Estudo Dirigido 04"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#estudo-dirigido-04","text":"","title":"Estudo Dirigido 04"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#atividade","text":"Para plotar os exerc\u00edcios de transforma\u00e7\u00f5es geom\u00e9tricas, a biblioteca Matplotlib \u00e9 ideal, pois \u00e9 uma das mais populares para visualiza\u00e7\u00e3o de dados e gr\u00e1ficos em Python. A Matplotlib \u00e9 adequada para criar gr\u00e1ficos de 2D, como pontos, linhas e formas geom\u00e9tricas. Aqui est\u00e3o os passos gerais e uma explica\u00e7\u00e3o de como usar essa biblioteca para plotar as transforma\u00e7\u00f5es geom\u00e9tricas:","title":"Atividade:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-1-translacao-simples","text":"Dado o ponto ( P(2, 3) ), aplique a transla\u00e7\u00e3o com vetor ( (4, -2) ). Perguntas : Qual \u00e9 o novo ponto ( P' )? Quais coordenadas foram alteradas?","title":"Exerc\u00edcio 1: Transla\u00e7\u00e3o Simples"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-2-escala-uniforme","text":"Considere um tri\u00e2ngulo com v\u00e9rtices ( A(1, 1), B(3, 1) ) e ( C(2, 4) ). Aplique uma escala uniforme de fator 2. Perguntas : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s a transforma\u00e7\u00e3o? O que acontece com o tamanho do tri\u00e2ngulo?","title":"Exerc\u00edcio 2: Escala Uniforme"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-3-escala-nao-uniforme","text":"Aplique uma escala n\u00e3o uniforme no tri\u00e2ngulo do Exerc\u00edcio 2, com fator de 2 no eixo (x) e fator de 0,5 no eixo (y). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices?","title":"Exerc\u00edcio 3: Escala N\u00e3o Uniforme"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-4-rotacao-em-torno-da-origem","text":"Rotacione o ponto ( P(1, 0) ) em 90\u00b0 no sentido anti-hor\u00e1rio em torno da origem. Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' ) ap\u00f3s a rota\u00e7\u00e3o?","title":"Exerc\u00edcio 4: Rota\u00e7\u00e3o em Torno da Origem"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-5-rotacao-de-um-poligono","text":"Um quadrado tem v\u00e9rtices ( A(1, 1), B(1, 4), C(4, 4), D(4, 1) ). Aplique uma rota\u00e7\u00e3o de 45\u00b0 no sentido hor\u00e1rio. Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices?","title":"Exerc\u00edcio 5: Rota\u00e7\u00e3o de um Pol\u00edgono"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-6-reflexao-simples","text":"Dado o ponto ( P(2, 5) ), aplique uma reflex\u00e3o em rela\u00e7\u00e3o ao eixo (y). Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' )?","title":"Exerc\u00edcio 6: Reflex\u00e3o Simples"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-7-reflexao-de-um-triangulo","text":"Considere um tri\u00e2ngulo com v\u00e9rtices ( A(2, 3), B(4, 3) ) e ( C(3, 5) ). Aplique uma reflex\u00e3o em rela\u00e7\u00e3o ao eixo (x). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s a transforma\u00e7\u00e3o?","title":"Exerc\u00edcio 7: Reflex\u00e3o de um Tri\u00e2ngulo"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-8-cisalhamento-horizontal","text":"Dado o ponto ( P(2, 3) ), aplique um cisalhamento horizontal com ( k = 2 ). Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' )?","title":"Exerc\u00edcio 8: Cisalhamento Horizontal"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-9-composicao-de-transformacoes","text":"Dado o ponto ( P(3, 2) ), aplique as seguintes transforma\u00e7\u00f5es consecutivas: 1. Uma transla\u00e7\u00e3o com vetor ( (1, -1) ). 2. Uma rota\u00e7\u00e3o de 90\u00b0 no sentido anti-hor\u00e1rio. 3. Uma escala uniforme com fator 2. Pergunta : Qual \u00e9 a nova posi\u00e7\u00e3o do ponto ( P' ) ap\u00f3s todas as transforma\u00e7\u00f5es?","title":"Exerc\u00edcio 9: Composi\u00e7\u00e3o de Transforma\u00e7\u00f5es"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exercicio-10-combinacao-de-transformacoes-em-uma-figura","text":"Dado um ret\u00e2ngulo com v\u00e9rtices ( A(1, 1), B(5, 1), C(5, 3), D(1, 3) ), aplique as seguintes transforma\u00e7\u00f5es em sequ\u00eancia: 1. Transla\u00e7\u00e3o com vetor ( (-2, 3) ). 2. Escala n\u00e3o uniforme com fatores ( 1.5 ) no eixo (x) e (0.5) no eixo (y). 3. Reflex\u00e3o em rela\u00e7\u00e3o ao eixo (y). Pergunta : Quais s\u00e3o as novas coordenadas dos v\u00e9rtices ap\u00f3s as tr\u00eas transforma\u00e7\u00f5es?","title":"Exerc\u00edcio 10: Combina\u00e7\u00e3o de Transforma\u00e7\u00f5es em uma Figura"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#instalacao-e-instrucoes-para-o-desenvolvimento","text":"Se voc\u00ea ainda n\u00e3o tiver o Matplotlib instalado, pode instalar com o seguinte comando: pip install matplotlib","title":"Instala\u00e7\u00e3o e Instru\u00e7\u00f5es para o desenvolvimento"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#estrutura-geral-para-plotar-transformacoes","text":"Para cada exerc\u00edcio, o processo de plotagem envolve: 1. Definir os pontos de uma forma geom\u00e9trica (tri\u00e2ngulo, quadrado, etc.). 2. Aplicar a transforma\u00e7\u00e3o (transla\u00e7\u00e3o, rota\u00e7\u00e3o, escala, etc.). 3. Plotar o objeto antes e depois da transforma\u00e7\u00e3o.","title":"Estrutura Geral para Plotar Transforma\u00e7\u00f5es"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exemplo-de-codigo-base-com-matplotlib","text":"Aqui est\u00e1 uma estrutura de c\u00f3digo que pode ser adaptada para cada um dos exerc\u00edcios: import numpy as np import matplotlib.pyplot as plt def plot_shapes(original_shape, transformed_shape, title): plt.figure() plt.plot(*zip(*original_shape, original_shape[0]), label=\"Original\") plt.plot(*zip(*transformed_shape, transformed_shape[0]), label=\"Transformado\", linestyle=\"--\") plt.title(title) plt.legend() plt.grid(True) plt.show() # Exemplo de quadrado square = np.array([[1, 1], [1, 4], [4, 4], [4, 1]]) # Exemplo de transforma\u00e7\u00e3o: transla\u00e7\u00e3o transformed_square = square + [2, -1] # Plotar o quadrado original e transformado plot_shapes(square, transformed_square, \"Transla\u00e7\u00e3o de um Quadrado\")","title":"Exemplo de C\u00f3digo Base com Matplotlib"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#aplicacao-para-cada-exercicio","text":"1. Exerc\u00edcio de Transla\u00e7\u00e3o : - Use a fun\u00e7\u00e3o de transla\u00e7\u00e3o e aplique aos pontos do objeto. - Plotar o objeto original e o transformado. 2. Exerc\u00edcio de Escala (Uniforme e N\u00e3o Uniforme) : - Escale as coordenadas dos v\u00e9rtices de acordo com o fator de escala. - Plotar o objeto antes e depois da transforma\u00e7\u00e3o. 3. Exerc\u00edcio de Rota\u00e7\u00e3o : - Aplique uma rota\u00e7\u00e3o de acordo com a matriz de rota\u00e7\u00e3o. - Plotar a figura rotacionada em rela\u00e7\u00e3o \u00e0 original. 4. Exerc\u00edcio de Reflex\u00e3o : - Aplique a matriz de reflex\u00e3o em rela\u00e7\u00e3o ao eixo (x) ou (y). - Plotar o objeto antes e depois da reflex\u00e3o. 5. Exerc\u00edcio de Cisalhamento : - Aplique a matriz de cisalhamento aos v\u00e9rtices. - Plotar o objeto antes e depois da transforma\u00e7\u00e3o. 6. Composi\u00e7\u00e3o de Transforma\u00e7\u00f5es : - Aplique uma sequ\u00eancia de transforma\u00e7\u00f5es (transla\u00e7\u00e3o, rota\u00e7\u00e3o e escala) e observe como a figura muda. - Plotar cada passo da transforma\u00e7\u00e3o para visualizar cada altera\u00e7\u00e3o.","title":"Aplica\u00e7\u00e3o para Cada Exerc\u00edcio:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#ajustes-especificos-para-cada-exercicio","text":"Exerc\u00edcios de Pol\u00edgonos (quadrado, tri\u00e2ngulo) : Definir as coordenadas iniciais dos v\u00e9rtices do pol\u00edgono. Exerc\u00edcios de Ponto Simples : Usar a fun\u00e7\u00e3o plt.scatter() para plotar um ponto antes e depois da transforma\u00e7\u00e3o.","title":"Ajustes Espec\u00edficos para Cada Exerc\u00edcio:"},{"location":"_Disciplina/Estudo%20Dirigido/EstDir04/#exemplo-completo-escala-e-translacao","text":"import numpy as np import matplotlib.pyplot as plt # Fun\u00e7\u00e3o para transla\u00e7\u00e3o def translate(points, translation): return points + translation # Fun\u00e7\u00e3o para escala def scale(points, factor): return points * factor # Exemplo: Tri\u00e2ngulo triangle = np.array([[1, 1], [3, 1], [2, 4]]) # Aplicar transla\u00e7\u00e3o e escala translated_triangle = translate(triangle, [2, 1]) scaled_triangle = scale(triangle, 1.5) # Plotar o tri\u00e2ngulo original, transladado e escalado plt.figure() plt.plot(*zip(*triangle, triangle[0]), label=\"Original\") plt.plot(*zip(*translated_triangle, translated_triangle[0]), label=\"Transladado\", linestyle=\"--\") plt.plot(*zip(*scaled_triangle, scaled_triangle[0]), label=\"Escalado\", linestyle=\"-.\") plt.title(\"Transforma\u00e7\u00f5es em um Tri\u00e2ngulo\") plt.legend() plt.grid(True) plt.show()","title":"Exemplo Completo (Escala e Transla\u00e7\u00e3o):"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/","text":"Estudo Dirigido 05 Atividade: Ilumina\u00e7\u00e3o e Anima\u00e7\u00e3o Cena Noturna de Estudo Objetivo Criar um cen\u00e1rio noturno em que um abajur ilumina uma mesa de estudo. O objetivo \u00e9 aplicar o modelo de ilumina\u00e7\u00e3o para destacar luzes difusas, luzes especulares, sombras e reflex\u00f5es, simulando uma cena realista em um ambiente de baixa luz. Instru\u00e7\u00f5es Configura\u00e7\u00e3o da Cena e Modelagem B\u00e1sica : Plano de Mesa : Adicione um plano de 10x5 unidades para representar a superf\u00edcie da mesa. Livro : Adicione um cubo fino (altura baixa) para simular um livro. Posicione-o pr\u00f3ximo ao centro da mesa e incline-o levemente. Copo : Adicione um cilindro alto e fino ao lado do livro, simulando um copo ou caneca. L\u00e1pis : Crie um cilindro fino e comprido para simular um l\u00e1pis, posicionado diagonalmente sobre o livro. Criando o Abajur : Base : Adicione um cilindro pequeno e baixo no final da mesa para representar a base do abajur. C\u00fapula : Adicione uma esfera cortada pela metade (ou um cilindro com topo arredondado) acima da base para simular a c\u00fapula do abajur. L\u00e2mpada : Coloque uma luz do tipo Point dentro da c\u00fapula do abajur. Ajuste a intensidade da luz para que ilumine suavemente os objetos ao redor, simulando o efeito de uma l\u00e2mpada noturna. Componentes de Ilumina\u00e7\u00e3o : Luz Difusa : Ajuste a luz do tipo Point dentro do abajur com um valor de intensidade difusa m\u00e9dio, para iluminar suavemente a \u00e1rea em volta. Reflex\u00e3o Especular : Aumente o valor especular na superf\u00edcie da mesa e no copo para que eles reflitam levemente a luz do abajur. Luz Ambiente : Configure uma luz ambiente muito baixa, com um tom azulado escuro, para simular a ilumina\u00e7\u00e3o do ambiente noturno. Sombras : Ative as sombras na luz do abajur para criar um contraste realista, com sombras mais intensas dos objetos que est\u00e3o na mesa. Materiais e Reflex\u00f5es : Mesa : Use um material levemente refletivo para o plano da mesa (como madeira escura) com reflex\u00f5es difusas altas e uma leve reflex\u00e3o especular. Livro : Aplique um material fosco com uma cor neutra e um tom levemente desgastado (amarelo ou bege claro). Copo : D\u00ea ao copo uma reflex\u00e3o especular mais forte, com uma leve transpar\u00eancia (como vidro fosco). L\u00e1pis : Use uma cor s\u00f3lida como vermelho ou azul, com baixa reflex\u00e3o especular. Configura\u00e7\u00f5es de Renderiza\u00e7\u00e3o : Posicione a c\u00e2mera de um \u00e2ngulo levemente acima da mesa, focando no livro e no abajur. Ative o sombreamento suave nos objetos para evitar bordas marcadas. Aumente a qualidade de amostragem para capturar detalhes de luzes e reflex\u00f5es. Objetivo Final An\u00e1lise dos Resultados : Observe como a luz difusa do abajur ilumina os objetos ao redor, criando uma atmosfera de leitura noturna. A luz especular no copo e na mesa real\u00e7a o realismo ao refletir a ilumina\u00e7\u00e3o da l\u00e2mpada. A luz ambiente em tom azulado ajuda a dar profundidade ao cen\u00e1rio e cria o efeito de uma noite tranquila. Desafio Avan\u00e7ado Experimente ajustar a intensidade da luz do abajur para observar como ela afeta o ambiente geral e como os componentes do modelo de ilumina\u00e7\u00e3o (especular, difusa, ambiente) contribuem para o realismo na cena. Anima\u00e7\u00e3o Texto complementar a ser inserido...","title":"Estudo Dirigido 05"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#estudo-dirigido-05","text":"","title":"Estudo Dirigido 05"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#atividade-iluminacao-e-animacao","text":"","title":"Atividade: Ilumina\u00e7\u00e3o e Anima\u00e7\u00e3o"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#cena-noturna-de-estudo","text":"","title":"Cena Noturna de Estudo"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#objetivo","text":"Criar um cen\u00e1rio noturno em que um abajur ilumina uma mesa de estudo. O objetivo \u00e9 aplicar o modelo de ilumina\u00e7\u00e3o para destacar luzes difusas, luzes especulares, sombras e reflex\u00f5es, simulando uma cena realista em um ambiente de baixa luz.","title":"Objetivo"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#instrucoes","text":"Configura\u00e7\u00e3o da Cena e Modelagem B\u00e1sica : Plano de Mesa : Adicione um plano de 10x5 unidades para representar a superf\u00edcie da mesa. Livro : Adicione um cubo fino (altura baixa) para simular um livro. Posicione-o pr\u00f3ximo ao centro da mesa e incline-o levemente. Copo : Adicione um cilindro alto e fino ao lado do livro, simulando um copo ou caneca. L\u00e1pis : Crie um cilindro fino e comprido para simular um l\u00e1pis, posicionado diagonalmente sobre o livro. Criando o Abajur : Base : Adicione um cilindro pequeno e baixo no final da mesa para representar a base do abajur. C\u00fapula : Adicione uma esfera cortada pela metade (ou um cilindro com topo arredondado) acima da base para simular a c\u00fapula do abajur. L\u00e2mpada : Coloque uma luz do tipo Point dentro da c\u00fapula do abajur. Ajuste a intensidade da luz para que ilumine suavemente os objetos ao redor, simulando o efeito de uma l\u00e2mpada noturna. Componentes de Ilumina\u00e7\u00e3o : Luz Difusa : Ajuste a luz do tipo Point dentro do abajur com um valor de intensidade difusa m\u00e9dio, para iluminar suavemente a \u00e1rea em volta. Reflex\u00e3o Especular : Aumente o valor especular na superf\u00edcie da mesa e no copo para que eles reflitam levemente a luz do abajur. Luz Ambiente : Configure uma luz ambiente muito baixa, com um tom azulado escuro, para simular a ilumina\u00e7\u00e3o do ambiente noturno. Sombras : Ative as sombras na luz do abajur para criar um contraste realista, com sombras mais intensas dos objetos que est\u00e3o na mesa. Materiais e Reflex\u00f5es : Mesa : Use um material levemente refletivo para o plano da mesa (como madeira escura) com reflex\u00f5es difusas altas e uma leve reflex\u00e3o especular. Livro : Aplique um material fosco com uma cor neutra e um tom levemente desgastado (amarelo ou bege claro). Copo : D\u00ea ao copo uma reflex\u00e3o especular mais forte, com uma leve transpar\u00eancia (como vidro fosco). L\u00e1pis : Use uma cor s\u00f3lida como vermelho ou azul, com baixa reflex\u00e3o especular. Configura\u00e7\u00f5es de Renderiza\u00e7\u00e3o : Posicione a c\u00e2mera de um \u00e2ngulo levemente acima da mesa, focando no livro e no abajur. Ative o sombreamento suave nos objetos para evitar bordas marcadas. Aumente a qualidade de amostragem para capturar detalhes de luzes e reflex\u00f5es.","title":"Instru\u00e7\u00f5es"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#objetivo-final","text":"An\u00e1lise dos Resultados : Observe como a luz difusa do abajur ilumina os objetos ao redor, criando uma atmosfera de leitura noturna. A luz especular no copo e na mesa real\u00e7a o realismo ao refletir a ilumina\u00e7\u00e3o da l\u00e2mpada. A luz ambiente em tom azulado ajuda a dar profundidade ao cen\u00e1rio e cria o efeito de uma noite tranquila.","title":"Objetivo Final"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#desafio-avancado","text":"Experimente ajustar a intensidade da luz do abajur para observar como ela afeta o ambiente geral e como os componentes do modelo de ilumina\u00e7\u00e3o (especular, difusa, ambiente) contribuem para o realismo na cena.","title":"Desafio Avan\u00e7ado"},{"location":"_Disciplina/Estudo%20Dirigido/EstDit05/#animacao","text":"Texto complementar a ser inserido...","title":"Anima\u00e7\u00e3o"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/","text":"Anima\u00e7\u00f5es e Jogos A anima\u00e7\u00e3o e os jogos compartilham uma base comum na computa\u00e7\u00e3o gr\u00e1fica, mas possuem nuances e objetivos espec\u00edficos. A seguir, apresentamos os principais conceitos que permeiam essas \u00e1reas: Conceitos Fundamentais em Anima\u00e7\u00e3o e Jogos Modelagem 3D: A cria\u00e7\u00e3o de objetos tridimensionais, desde personagens simples at\u00e9 cen\u00e1rios complexos, \u00e9 o primeiro passo para qualquer anima\u00e7\u00e3o ou jogo. Texturiza\u00e7\u00e3o: A aplica\u00e7\u00e3o de imagens sobre os modelos 3D para dar-lhes cor, detalhes e realismo. Rigging: A cria\u00e7\u00e3o de uma estrutura interna (esqueleto) para um modelo 3D, permitindo que ele se movimente de forma natural. Anima\u00e7\u00e3o: O processo de dar vida aos modelos 3D, criando sequ\u00eancias de movimentos. Pode ser feita de forma manual (keyframing) ou procedural (utilizando scripts ou ferramentas automatizadas). Cinem\u00e1tica direta e inversa: A cinem\u00e1tica direta envolve mover os membros de um personagem manualmente, enquanto a cinem\u00e1tica inversa permite mover um ponto final e o sistema calcula os movimentos dos membros intermedi\u00e1rios. Ilumina\u00e7\u00e3o: A simula\u00e7\u00e3o da intera\u00e7\u00e3o da luz com os objetos 3D, criando efeitos de sombra, reflex\u00e3o e refra\u00e7\u00e3o. Renderiza\u00e7\u00e3o: O processo de gerar uma imagem final a partir de uma cena 3D, calculando a ilumina\u00e7\u00e3o, as sombras e os efeitos visuais. Motor de jogo: Um software que fornece as ferramentas e funcionalidades b\u00e1sicas para a cria\u00e7\u00e3o de jogos, como f\u00edsica, colis\u00f5es, gerenciamento de \u00e1udio e interface com o usu\u00e1rio. Diferen\u00e7as entre Anima\u00e7\u00e3o e Jogos Interatividade: A principal diferen\u00e7a \u00e9 que os jogos s\u00e3o interativos, permitindo que o jogador interaja com o ambiente e os personagens. As anima\u00e7\u00f5es, por sua vez, s\u00e3o geralmente pr\u00e9-renderizadas e n\u00e3o permitem essa intera\u00e7\u00e3o. Tempo real: Os jogos exigem renderiza\u00e7\u00e3o em tempo real para garantir uma experi\u00eancia fluida para o jogador. As anima\u00e7\u00f5es podem ser renderizadas em tempo real ou offline, dependendo da complexidade da cena e das necessidades do projeto. Narrativa: Os jogos podem ter uma narrativa forte, mas a intera\u00e7\u00e3o do jogador pode influenciar o desenrolar da hist\u00f3ria. As anima\u00e7\u00f5es, por sua vez, geralmente possuem uma narrativa linear e pr\u00e9-determinada. Conceitos Espec\u00edficos de Jogos Game design: O processo de cria\u00e7\u00e3o das regras, mec\u00e2nicas e objetivos de um jogo. Level design: O design dos n\u00edveis de um jogo, incluindo a disposi\u00e7\u00e3o dos elementos do cen\u00e1rio, a coloca\u00e7\u00e3o de inimigos e a cria\u00e7\u00e3o de desafios. Intelig\u00eancia artificial: A implementa\u00e7\u00e3o de comportamentos inteligentes para os personagens n\u00e3o jog\u00e1veis (NPCs). Rede: A comunica\u00e7\u00e3o entre m\u00faltiplos jogadores em um jogo online. Ferramentas e Softwares Modelagem: Blender, 3ds Max, Maya Texturiza\u00e7\u00e3o: Substance Painter, Photoshop Rigging: Maya, Blender Anima\u00e7\u00e3o: Maya, Blender, Houdini Motores de jogo: Unity, Unreal Engine, Godot \u00c1reas de Estudo Relacionadas Teoria das cores: Para criar paletas de cores harmoniosas e impactantes. Psicologia da cor: Para utilizar as cores para evocar emo\u00e7\u00f5es e sensa\u00e7\u00f5es nos jogadores. Ergonomia: Para projetar interfaces intuitivas e confort\u00e1veis para o jogador. Narrativa: Para criar hist\u00f3rias envolventes e memor\u00e1veis. Em resumo, a anima\u00e7\u00e3o e os jogos s\u00e3o \u00e1reas da computa\u00e7\u00e3o gr\u00e1fica que se complementam e se beneficiam mutuamente. Ao dominar os conceitos fundamentais e as ferramentas espec\u00edficas, voc\u00ea estar\u00e1 apto a criar experi\u00eancias visuais incr\u00edveis e imersivas. Gostaria de se aprofundar em algum desses t\u00f3picos? T\u00f3picos para aprofundamento: Tipos de anima\u00e7\u00e3o: Keyframing, motion capture, anima\u00e7\u00e3o procedural. F\u00edsica em jogos: Como simular a f\u00edsica real em um ambiente virtual. Design de personagens: Como criar personagens memor\u00e1veis e consistentes. T\u00f3picos mais t\u00e9cnicos Shaders: Explore a programa\u00e7\u00e3o de shaders para criar efeitos visuais personalizados, como ilumina\u00e7\u00e3o realista, texturas procedural e p\u00f3s-processamento. F\u00edsica de part\u00edculas: Crie efeitos como fuma\u00e7a, fogo, \u00e1gua e explos\u00f5es, tornando suas cenas mais din\u00e2micas e realistas. Voxel graphics: Uma alternativa \u00e0 modelagem tradicional, com aplica\u00e7\u00f5es em jogos e anima\u00e7\u00f5es em tempo real. Realidade virtual e aumentada: Desenvolva experi\u00eancias imersivas utilizando tecnologias como VR e AR. Game engines avan\u00e7ados: Explore os recursos mais avan\u00e7ados de motores como Unreal Engine e Unity, como o sistema de part\u00edculas Niagara, o Blueprint Visual Scripting e o MetaHuman. T\u00f3picos mais art\u00edsticos Storyboard: Aprenda a criar sequ\u00eancias de desenhos para planejar anima\u00e7\u00f5es e jogos, definindo a narrativa e a c\u00e2mera. Character design: Desenvolva personagens memor\u00e1veis e consistentes, considerando a est\u00e9tica do seu projeto e a personalidade dos personagens. Worldbuilding: Crie universos ricos e detalhados para seus jogos e anima\u00e7\u00f5es, incluindo a hist\u00f3ria, a cultura e a geografia do mundo. Cinematografia: Aplique t\u00e9cnicas de filmagem para criar cenas mais din\u00e2micas e envolventes em seus jogos e anima\u00e7\u00f5es. Sound design: Crie paisagens sonoras imersivas e efeitos sonoros que complementam a experi\u00eancia visual. T\u00f3picos interdisciplinares Intelig\u00eancia artificial em jogos: Explore o uso de algoritmos de IA para criar inimigos mais inteligentes, NPCs com comportamentos mais realistas e sistemas de gera\u00e7\u00e3o de conte\u00fado procedural. Gamification: Aplique elementos de jogos em outras \u00e1reas, como educa\u00e7\u00e3o e marketing, para aumentar o engajamento e a motiva\u00e7\u00e3o. UX/UI design: Crie interfaces intuitivas e agrad\u00e1veis para seus jogos, garantindo uma boa experi\u00eancia para o jogador. Design de jogos narrativos: Explore a cria\u00e7\u00e3o de jogos com hist\u00f3rias profundas e complexas, onde as escolhas do jogador impactam significativamente a narrativa. T\u00f3picos espec\u00edficos para cada \u00e1rea Anima\u00e7\u00e3o: Anima\u00e7\u00e3o de rotoscopia, anima\u00e7\u00e3o stop-motion, anima\u00e7\u00e3o 2D, anima\u00e7\u00e3o para realidade virtual. Jogos: Desenvolvimento de jogos mobile, jogos indie, jogos multiplayer online, jogos de realidade virtual.","title":"Anima\u00e7\u00f5es e Jogos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#animacoes-e-jogos","text":"A anima\u00e7\u00e3o e os jogos compartilham uma base comum na computa\u00e7\u00e3o gr\u00e1fica, mas possuem nuances e objetivos espec\u00edficos. A seguir, apresentamos os principais conceitos que permeiam essas \u00e1reas:","title":"Anima\u00e7\u00f5es e Jogos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#conceitos-fundamentais-em-animacao-e-jogos","text":"Modelagem 3D: A cria\u00e7\u00e3o de objetos tridimensionais, desde personagens simples at\u00e9 cen\u00e1rios complexos, \u00e9 o primeiro passo para qualquer anima\u00e7\u00e3o ou jogo. Texturiza\u00e7\u00e3o: A aplica\u00e7\u00e3o de imagens sobre os modelos 3D para dar-lhes cor, detalhes e realismo. Rigging: A cria\u00e7\u00e3o de uma estrutura interna (esqueleto) para um modelo 3D, permitindo que ele se movimente de forma natural. Anima\u00e7\u00e3o: O processo de dar vida aos modelos 3D, criando sequ\u00eancias de movimentos. Pode ser feita de forma manual (keyframing) ou procedural (utilizando scripts ou ferramentas automatizadas). Cinem\u00e1tica direta e inversa: A cinem\u00e1tica direta envolve mover os membros de um personagem manualmente, enquanto a cinem\u00e1tica inversa permite mover um ponto final e o sistema calcula os movimentos dos membros intermedi\u00e1rios. Ilumina\u00e7\u00e3o: A simula\u00e7\u00e3o da intera\u00e7\u00e3o da luz com os objetos 3D, criando efeitos de sombra, reflex\u00e3o e refra\u00e7\u00e3o. Renderiza\u00e7\u00e3o: O processo de gerar uma imagem final a partir de uma cena 3D, calculando a ilumina\u00e7\u00e3o, as sombras e os efeitos visuais. Motor de jogo: Um software que fornece as ferramentas e funcionalidades b\u00e1sicas para a cria\u00e7\u00e3o de jogos, como f\u00edsica, colis\u00f5es, gerenciamento de \u00e1udio e interface com o usu\u00e1rio.","title":"Conceitos Fundamentais em Anima\u00e7\u00e3o e Jogos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#diferencas-entre-animacao-e-jogos","text":"Interatividade: A principal diferen\u00e7a \u00e9 que os jogos s\u00e3o interativos, permitindo que o jogador interaja com o ambiente e os personagens. As anima\u00e7\u00f5es, por sua vez, s\u00e3o geralmente pr\u00e9-renderizadas e n\u00e3o permitem essa intera\u00e7\u00e3o. Tempo real: Os jogos exigem renderiza\u00e7\u00e3o em tempo real para garantir uma experi\u00eancia fluida para o jogador. As anima\u00e7\u00f5es podem ser renderizadas em tempo real ou offline, dependendo da complexidade da cena e das necessidades do projeto. Narrativa: Os jogos podem ter uma narrativa forte, mas a intera\u00e7\u00e3o do jogador pode influenciar o desenrolar da hist\u00f3ria. As anima\u00e7\u00f5es, por sua vez, geralmente possuem uma narrativa linear e pr\u00e9-determinada.","title":"Diferen\u00e7as entre Anima\u00e7\u00e3o e Jogos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#conceitos-especificos-de-jogos","text":"Game design: O processo de cria\u00e7\u00e3o das regras, mec\u00e2nicas e objetivos de um jogo. Level design: O design dos n\u00edveis de um jogo, incluindo a disposi\u00e7\u00e3o dos elementos do cen\u00e1rio, a coloca\u00e7\u00e3o de inimigos e a cria\u00e7\u00e3o de desafios. Intelig\u00eancia artificial: A implementa\u00e7\u00e3o de comportamentos inteligentes para os personagens n\u00e3o jog\u00e1veis (NPCs). Rede: A comunica\u00e7\u00e3o entre m\u00faltiplos jogadores em um jogo online.","title":"Conceitos Espec\u00edficos de Jogos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#ferramentas-e-softwares","text":"Modelagem: Blender, 3ds Max, Maya Texturiza\u00e7\u00e3o: Substance Painter, Photoshop Rigging: Maya, Blender Anima\u00e7\u00e3o: Maya, Blender, Houdini Motores de jogo: Unity, Unreal Engine, Godot","title":"Ferramentas e Softwares"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#areas-de-estudo-relacionadas","text":"Teoria das cores: Para criar paletas de cores harmoniosas e impactantes. Psicologia da cor: Para utilizar as cores para evocar emo\u00e7\u00f5es e sensa\u00e7\u00f5es nos jogadores. Ergonomia: Para projetar interfaces intuitivas e confort\u00e1veis para o jogador. Narrativa: Para criar hist\u00f3rias envolventes e memor\u00e1veis. Em resumo, a anima\u00e7\u00e3o e os jogos s\u00e3o \u00e1reas da computa\u00e7\u00e3o gr\u00e1fica que se complementam e se beneficiam mutuamente. Ao dominar os conceitos fundamentais e as ferramentas espec\u00edficas, voc\u00ea estar\u00e1 apto a criar experi\u00eancias visuais incr\u00edveis e imersivas. Gostaria de se aprofundar em algum desses t\u00f3picos? T\u00f3picos para aprofundamento: Tipos de anima\u00e7\u00e3o: Keyframing, motion capture, anima\u00e7\u00e3o procedural. F\u00edsica em jogos: Como simular a f\u00edsica real em um ambiente virtual. Design de personagens: Como criar personagens memor\u00e1veis e consistentes.","title":"\u00c1reas de Estudo Relacionadas"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#topicos-mais-tecnicos","text":"Shaders: Explore a programa\u00e7\u00e3o de shaders para criar efeitos visuais personalizados, como ilumina\u00e7\u00e3o realista, texturas procedural e p\u00f3s-processamento. F\u00edsica de part\u00edculas: Crie efeitos como fuma\u00e7a, fogo, \u00e1gua e explos\u00f5es, tornando suas cenas mais din\u00e2micas e realistas. Voxel graphics: Uma alternativa \u00e0 modelagem tradicional, com aplica\u00e7\u00f5es em jogos e anima\u00e7\u00f5es em tempo real. Realidade virtual e aumentada: Desenvolva experi\u00eancias imersivas utilizando tecnologias como VR e AR. Game engines avan\u00e7ados: Explore os recursos mais avan\u00e7ados de motores como Unreal Engine e Unity, como o sistema de part\u00edculas Niagara, o Blueprint Visual Scripting e o MetaHuman.","title":"T\u00f3picos mais t\u00e9cnicos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#topicos-mais-artisticos","text":"Storyboard: Aprenda a criar sequ\u00eancias de desenhos para planejar anima\u00e7\u00f5es e jogos, definindo a narrativa e a c\u00e2mera. Character design: Desenvolva personagens memor\u00e1veis e consistentes, considerando a est\u00e9tica do seu projeto e a personalidade dos personagens. Worldbuilding: Crie universos ricos e detalhados para seus jogos e anima\u00e7\u00f5es, incluindo a hist\u00f3ria, a cultura e a geografia do mundo. Cinematografia: Aplique t\u00e9cnicas de filmagem para criar cenas mais din\u00e2micas e envolventes em seus jogos e anima\u00e7\u00f5es. Sound design: Crie paisagens sonoras imersivas e efeitos sonoros que complementam a experi\u00eancia visual.","title":"T\u00f3picos mais art\u00edsticos"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#topicos-interdisciplinares","text":"Intelig\u00eancia artificial em jogos: Explore o uso de algoritmos de IA para criar inimigos mais inteligentes, NPCs com comportamentos mais realistas e sistemas de gera\u00e7\u00e3o de conte\u00fado procedural. Gamification: Aplique elementos de jogos em outras \u00e1reas, como educa\u00e7\u00e3o e marketing, para aumentar o engajamento e a motiva\u00e7\u00e3o. UX/UI design: Crie interfaces intuitivas e agrad\u00e1veis para seus jogos, garantindo uma boa experi\u00eancia para o jogador. Design de jogos narrativos: Explore a cria\u00e7\u00e3o de jogos com hist\u00f3rias profundas e complexas, onde as escolhas do jogador impactam significativamente a narrativa.","title":"T\u00f3picos interdisciplinares"},{"location":"_Disciplina/Estudo%20Dirigido/Jogos%20e%20Anima%C3%A7%C3%A3o/#topicos-especificos-para-cada-area","text":"Anima\u00e7\u00e3o: Anima\u00e7\u00e3o de rotoscopia, anima\u00e7\u00e3o stop-motion, anima\u00e7\u00e3o 2D, anima\u00e7\u00e3o para realidade virtual. Jogos: Desenvolvimento de jogos mobile, jogos indie, jogos multiplayer online, jogos de realidade virtual.","title":"T\u00f3picos espec\u00edficos para cada \u00e1rea"}]}